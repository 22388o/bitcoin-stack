!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	//
0	package.json	/^    "lightning-network",$/;"	s	array:keywords
1	package.json	/^    "lightning",$/;"	s	array:keywords
2	package.json	/^    "c-lightning",$/;"	s	array:keywords
3	package.json	/^    "clightning",$/;"	s	array:keywords
4	package.json	/^    "plugin",$/;"	s	array:keywords
5	package.json	/^    "rpc",$/;"	s	array:keywords
6	package.json	/^    "bitcoin"$/;"	s	array:keywords
AnonymousFunctionfa5879360100	src/plugin.js	/^      rpcmethods: this.methods.map(function (method) {$/;"	f
EventEmitter	src/plugin.js	/^const EventEmitter = require('events');$/;"	C
Hooks subscription	README.md	/^### Hooks subscription$/;"	S
Installation	README.md	/^## Installation$/;"	s
LICENCE	README.md	/^## LICENCE$/;"	s
Methods	README.md	/^### Methods$/;"	S
Misc	README.md	/^## Misc$/;"	s
More about C-lightning plugins	README.md	/^## More about C-lightning plugins$/;"	s
Notification	src/plugin.js	/^class Notification extends EventEmitter {};$/;"	c
Notifications subscription	README.md	/^### Notifications subscription$/;"	S
Plugin	src/plugin.js	/^class Plugin {$/;"	c
Plugin	test/plugin.js	/^const Plugin = require('..\/src\/plugin.js');$/;"	C
RpcMethod	src/method.js	/^class RpcMethod {$/;"	c
RpcMethod	src/plugin.js	/^const RpcMethod = require('.\/method.js');$/;"	C
RpcWrapper	src/plugin.js	/^const RpcWrapper = require('.\/rpc.js');$/;"	C
RpcWrapper	src/rpc.js	/^class RpcWrapper {$/;"	c
Startup options	README.md	/^### Startup options$/;"	S
Usage	README.md	/^## Usage$/;"	s
_getmanifest	src/plugin.js	/^  _getmanifest (params) {$/;"	m	class:Plugin
_init	src/plugin.js	/^  _init (params) {$/;"	m	class:Plugin
_jsonRpcRequest	src/rpc.js	/^  async _jsonRpcRequest (data) {$/;"	m	class:RpcWrapper
_mainLoop	src/plugin.js	/^  async _mainLoop () {$/;"	m	class:Plugin
_write	src/plugin.js	/^  async _write (content) {$/;"	m	class:Plugin
_writeJsonrpcNotification	src/plugin.js	/^  async _writeJsonrpcNotification (fd, method, params) {$/;"	m	class:Plugin
_writeJsonrpcResponse	src/plugin.js	/^  async _writeJsonrpcResponse (fd, result, id) {$/;"	m	class:Plugin
addHook	src/plugin.js	/^  addHook (name, callback) {$/;"	m	class:Plugin
addMethod	src/plugin.js	/^  addMethod (name, callback, usage, description, longDescription) {$/;"	m	class:Plugin
addOption	src/plugin.js	/^  addOption (name, defaultValue, description, type) {$/;"	m	class:Plugin
assert	test/plugin.js	/^const assert = require('assert');$/;"	C
author	package.json	/^  "author": "Antoine Poinsot (darosior)",$/;"	s
bugs	package.json	/^  "bugs": {$/;"	o
call	src/rpc.js	/^  async call (_method, _params) {$/;"	m	class:RpcWrapper
clightningjs	README.md	/^# clightningjs$/;"	c
constructor	src/method.js	/^  constructor (name, usage, description, longDescription) {$/;"	m	class:RpcMethod
constructor	src/plugin.js	/^  constructor (dynamic) {$/;"	m	class:Plugin
constructor	src/rpc.js	/^  constructor (socketPath) {$/;"	m	class:RpcWrapper
description	package.json	/^  "description": "Plugins for C-lightning, a Lightning Network implementation. Also contains an /;"	s
fs	src/rpc.js	/^const fs = require('fs');$/;"	C
fs	test/plugin.js	/^const fs = require('fs');$/;"	C
homepage	package.json	/^  "homepage": "https:\/\/github.com\/darosior\/clightningjs#readme"$/;"	s
id	src/plugin.js	/^      id: id$/;"	p	class:Plugin._writeJsonrpcResponse.payload
id	src/rpc.js	/^      id: this.id,$/;"	p	class:RpcWrapper.call.request
jsonrpc	src/plugin.js	/^      jsonrpc: '2.0',$/;"	p	class:Plugin._writeJsonrpcNotification.payload
jsonrpc	src/plugin.js	/^      jsonrpc: '2.0',$/;"	p	class:Plugin._writeJsonrpcResponse.payload
jsonrpc	src/rpc.js	/^      jsonrpc: '2.0',$/;"	p	class:RpcWrapper.call.request
keywords	package.json	/^  "keywords": [$/;"	a
license	package.json	/^  "license": "BSD-3-Clause-Clear",$/;"	s
log	src/plugin.js	/^  log (message, level) {$/;"	m	class:Plugin
log	test/plugin.js	/^function log(params) {$/;"	f
main	package.json	/^  "main": "src\/plugin.js",$/;"	s
method	src/plugin.js	/^      method: method,$/;"	p	class:Plugin._writeJsonrpcNotification.payload
method	src/rpc.js	/^      method: _method,$/;"	p	class:RpcWrapper.call.request
name	package.json	/^  "name": "clightningjs",$/;"	s
net	src/rpc.js	/^const net = require('net');$/;"	C
onInit	src/plugin.js	/^  onInit (params) {$/;"	m	class:Plugin
onInit	test/plugin.js	/^test.onInit = function (params) {$/;"	f	function:test
params	src/plugin.js	/^      params: params,$/;"	p	class:Plugin._writeJsonrpcNotification.payload
params	src/rpc.js	/^      params: _params$/;"	p	class:RpcWrapper.call.request
path	src/plugin.js	/^const path = require('path');$/;"	C
payload	src/plugin.js	/^    const payload = {$/;"	c	class:Plugin._writeJsonrpcNotification
payload	src/plugin.js	/^    const payload = {$/;"	c	class:Plugin._writeJsonrpcResponse
repository	package.json	/^  "repository": {$/;"	o
request	src/rpc.js	/^    const request = {$/;"	c	class:RpcWrapper.call
restoreSocket	src/rpc.js	/^  restoreSocket () {$/;"	m	class:RpcWrapper
result	src/plugin.js	/^      result: result,$/;"	p	class:Plugin._writeJsonrpcResponse.payload
sayBye	test/plugin.js	/^async function sayBye(params) {$/;"	f
sayHello	test/plugin.js	/^function sayHello(params) {$/;"	f
scripts	package.json	/^  "scripts": {$/;"	o
start	src/plugin.js	/^  start () {$/;"	m	class:Plugin
subscribe	src/plugin.js	/^  subscribe (name) {$/;"	m	class:Plugin
test	package.json	/^    "test": "lightningd --testnet --lightning-dir=$PWD\/test-lightning-dir --plugin=$PWD\/test\//;"	s	object:scripts
test	test/plugin.js	/^const test = new Plugin({dynamic: false});$/;"	C
testRpc	test/plugin.js	/^test.testRpc = async function (params) {$/;"	f	function:test
type	package.json	/^    "type": "git",$/;"	s	object:repository
url	package.json	/^    "url": "git+https:\/\/github.com\/darosior\/clightningjs.git"$/;"	s	object:repository
url	package.json	/^    "url": "https:\/\/github.com\/darosior\/clightningjs\/issues"$/;"	s	object:bugs
useLessBackup	test/plugin.js	/^function useLessBackup(params) {$/;"	f
version	package.json	/^  "version": "0.1.1",$/;"	s
